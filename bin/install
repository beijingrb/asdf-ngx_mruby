#!/usr/bin/env bash

# only "version" install_type supported at present
install() {
    local install_type=$1
    local version=$2
    local install_path=$3
    local file_name="ngx_mruby-${version}"

    if [ "$TMPDIR" = "" ]; then
        local tmp_dir=$(mktemp -d -t ngx_mruby_build_XXXXXX)
    else
        local tmp_dir=$TMPDIR
    fi

    local source_path=$(get_download_file_path $install_type $version $tmp_dir $file_name)
    [ -f $source_path ] && rm $source_path
    echo "Downloading the source file..."
    download_source $install_type $version $source_path

    # running this in a subshell
    # because we don't want to disturb current working dir
    (
    cd $(dirname $source_path)
    tar_dir=$file_name
    [ -d $tar_dir ] && rm -rf $tar_dir
    mkdir $tar_dir
    tar zxf $source_path --strip-components 1 -C $tar_dir
    cd $tar_dir

    local configure_options="--prefix=$install_path $(os_based_configure_options)"
    # set in os_based_configure_options
    # we unset it here because echo-ing changes the return value of the function
    unset ASDF_PKG_MISSING

    echo "Building ngx_mruby with options: $configure_options"
    NGX_MRUBY_LDFLAGS='-L/usr/local/opt/openssl/lib -lcrypto' NGINX_CONFIG_OPT_ENV=$configure_options sh build.sh && make install
    ) || (rm -rf $install_path; exit 1)
}


os_based_configure_options() {
    local operating_system=$(uname -s)
    local configure_options=""

    if [ "Darwin" = $operating_system ]; then
        # for 'openssl/opensslv.h' file not found error
        (cd /usr/local/include && ln -s ../opt/openssl/include/openssl .) || :
        configure_options="--with-cc-opt=\"-I/usr/local/opt/openssl/include/ -I/usr/local/opt/pcre/include/\" \
                           --with-ld-opt=\"-L/usr/local/opt/openssl/lib/ -L/usr/local/opt/pcre/lib/\""
    fi

    echo $configure_options
}


download_source() {
    local install_type=$1
    local version=$2
    local download_path=$3
    local download_url=$(get_download_url $install_type $version)

    curl -Lo $download_path -C - $download_url
}


get_download_file_path() {
    local install_type=$1
    local version=$2
    local tmp_dir=$3
    local file_name=$4
    local pkg_name="$file_name.tar.gz"

    echo "$tmp_dir/$pkg_name"
}


get_download_url() {
    local install_type=$1
    local version=$2
    echo "https://api.github.com/repos/matsumotory/ngx_mruby/tarball/v${version}"
}

install $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
